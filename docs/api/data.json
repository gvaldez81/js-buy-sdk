{
    "project": {
        "name": "Shopify's JS Buy SDK",
        "version": "v0.6.0",
        "jekyllFrontMatter": {
            "layout": "api"
        }
    },
    "files": {
        "docs/src/src/models/cart-line-item-model.js": {
            "name": "docs/src/src/models/cart-line-item-model.js",
            "modules": {},
            "classes": {
                "CartLineItemModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/models/cart-model.js": {
            "name": "docs/src/src/models/cart-model.js",
            "modules": {},
            "classes": {
                "CartModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/models/image-model.js": {
            "name": "docs/src/src/models/image-model.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/models/product-model.js": {
            "name": "docs/src/src/models/product-model.js",
            "modules": {},
            "classes": {
                "ProductModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/models/product-option-model.js": {
            "name": "docs/src/src/models/product-option-model.js",
            "modules": {},
            "classes": {
                "ProductOptionModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/models/product-variant-model.js": {
            "name": "docs/src/src/models/product-variant-model.js",
            "modules": {},
            "classes": {
                "ProductVariantModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/models/reference-model.js": {
            "name": "docs/src/src/models/reference-model.js",
            "modules": {},
            "classes": {
                "ReferenceModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/config.js": {
            "name": "docs/src/src/config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/logger.js": {
            "name": "docs/src/src/logger.js",
            "modules": {},
            "classes": {
                "Logger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/shop-client.js": {
            "name": "docs/src/src/shop-client.js",
            "modules": {
                "shop-client": 1
            },
            "classes": {
                "ShopClient": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "docs/src/src/shopify.js": {
            "name": "docs/src/src/shopify.js",
            "modules": {
                "shopify": 1
            },
            "classes": {
                "ShopifyBuy": 1
            },
            "fors": {
                "ShopifyBuy": 1
            },
            "namespaces": {}
        },
        "docs/src/src/version.js": {
            "name": "docs/src/src/version.js",
            "modules": {
                "version": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "shopify-buy": {
            "name": "shopify-buy",
            "submodules": {
                "shop-client": 1,
                "shopify": 1,
                "version": 1
            },
            "elements": {},
            "classes": {
                "CartLineItemModel": 1,
                "CartModel": 1,
                "ProductModel": 1,
                "ProductOptionModel": 1,
                "ProductVariantModel": 1,
                "ReferenceModel": 1,
                "Logger": 1,
                "ShopClient": 1,
                "ShopifyBuy": 1
            },
            "fors": {
                "ShopifyBuy": 1
            },
            "namespaces": {},
            "file": "docs/src/src/shopify.js",
            "line": 13
        },
        "shop-client": {
            "name": "shop-client",
            "submodules": {},
            "elements": {},
            "classes": {
                "ShopClient": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "shopify-buy",
            "namespace": "",
            "file": "docs/src/src/shop-client.js",
            "line": 40
        },
        "shopify": {
            "name": "shopify",
            "submodules": {},
            "elements": {},
            "classes": {
                "ShopifyBuy": 1
            },
            "fors": {
                "ShopifyBuy": 1
            },
            "is_submodule": 1,
            "namespaces": {},
            "module": "shopify-buy",
            "namespace": "",
            "file": "docs/src/src/shopify.js",
            "line": 13,
            "description": "`ShopifyBuy` only defines one function {{#crossLink \"ShopifyBuy/buildClient\"}}{{/crossLink}} which can\nbe used to build a {{#crossLink \"ShopClient\"}}{{/crossLink}} to query your store using the\nprovided\n{{#crossLink \"ShopifyBuy/buildClient/configAttrs:accessToken\"}}`accessToken`{{/crossLink}},\n{{#crossLink \"ShopifyBuy/buildClient/configAttrs:appId\"}}`appId`{{/crossLink}},\nand {{#crossLink \"ShopifyBuy/buildClient/configAttrs:domain\"}}`domain`{{/crossLink}}."
        },
        "version": {
            "name": "version",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "shopify-buy",
            "namespace": "",
            "file": "docs/src/src/version.js",
            "line": 3
        }
    },
    "classes": {
        "CartLineItemModel": {
            "name": "CartLineItemModel",
            "shortname": "CartLineItemModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 4,
            "description": "A cart stores an Array of `CartLineItemModel`'s in it's `lineItems` property.",
            "is_constructor": 1
        },
        "CartModel": {
            "name": "CartModel",
            "shortname": "CartModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/models/cart-model.js",
            "line": 25,
            "description": "Class for cart model"
        },
        "ProductModel": {
            "name": "ProductModel",
            "shortname": "ProductModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/models/product-model.js",
            "line": 9,
            "description": "Class for products returned by fetch('product')",
            "is_constructor": 1
        },
        "ProductOptionModel": {
            "name": "ProductOptionModel",
            "shortname": "ProductOptionModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/models/product-option-model.js",
            "line": 5,
            "description": "Class for product option",
            "is_constructor": 1
        },
        "ProductVariantModel": {
            "name": "ProductVariantModel",
            "shortname": "ProductVariantModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 4,
            "description": "Model for product variant",
            "is_constructor": 1
        },
        "ReferenceModel": {
            "name": "ReferenceModel",
            "shortname": "ReferenceModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/models/reference-model.js",
            "line": 6,
            "description": "Class for reference model",
            "access": "private",
            "tagname": "",
            "is_constructor": 1
        },
        "Logger": {
            "name": "Logger",
            "shortname": "Logger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "file": "docs/src/src/logger.js",
            "line": 27,
            "description": "Wrapper around the console log so in the future we can have better dev output.\nAlso allows us to disable output in production.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1
        },
        "ShopClient": {
            "name": "ShopClient",
            "shortname": "ShopClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "submodule": "shop-client",
            "namespace": "",
            "file": "docs/src/src/shop-client.js",
            "line": 40,
            "is_constructor": 1
        },
        "ShopifyBuy": {
            "name": "ShopifyBuy",
            "shortname": "ShopifyBuy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shopify-buy",
            "submodule": "shopify",
            "namespace": "",
            "file": "docs/src/src/shopify.js",
            "line": 13,
            "description": "`ShopifyBuy` only defines one function {{#crossLink \"ShopifyBuy/buildClient\"}}{{/crossLink}} which can\nbe used to build a {{#crossLink \"ShopClient\"}}{{/crossLink}} to query your store using the\nprovided\n{{#crossLink \"ShopifyBuy/buildClient/configAttrs:accessToken\"}}`accessToken`{{/crossLink}},\n{{#crossLink \"ShopifyBuy/buildClient/configAttrs:appId\"}}`appId`{{/crossLink}},\nand {{#crossLink \"ShopifyBuy/buildClient/configAttrs:domain\"}}`domain`{{/crossLink}}.",
            "static": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 14,
            "description": "A line item ID.",
            "itemtype": "property",
            "name": "id",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 24,
            "description": "ID of line item variant.",
            "itemtype": "property",
            "name": "variant_id",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 34,
            "description": "ID of variant's product.",
            "itemtype": "property",
            "name": "product_id",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 44,
            "description": "Variant's image.\nExample `Object` returned:\n```\n{\n   \"id\": 18723183238,\n   \"created_at\": \"2016-09-14T17:12:12-04:00\",\n   \"position\": 1,\n   \"updated_at\": \"2016-09-14T17:12:12-04:00\",\n   \"product_id\": 8569911558,\n   \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/Mop__three_different_mop_handles.jpg?v=1473887532\",\n   \"variant_ids\": []\n }\n```",
            "itemtype": "property",
            "name": "image",
            "readonly": "",
            "type": "{Object}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 66,
            "description": "Image variants available for a variant. An example value of `imageVariant`:\n```\n[\n  {\n    \"name\": \"pico\",\n    \"dimensions\": \"16x16\",\n    \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/alien_146ef7c1-26e9-4e96-96e6-9d37128d0005_pico.jpg?v=1469046423\"\n  },\n  {\n    \"name\": \"compact\",\n    \"dimensions\": \"160x160\",\n    \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/alien_146ef7c1-26e9-4e96-96e6-9d37128d0005_compact.jpg?v=1469046423\"\n  }\n]\n```",
            "itemtype": "property",
            "name": "imageVariant",
            "type": "{Array}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 90,
            "description": "Product title of variant's parent product.",
            "itemtype": "property",
            "name": "title",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 100,
            "description": "Count of variants to order.",
            "itemtype": "property",
            "name": "quantity",
            "type": "{Number}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 124,
            "description": "Customization information for a product.\n<a href=\"https://help.shopify.com/themes/customization/products/get-customization-information-for-products\" target=\"_blank\">\nSee here for more info\n</a>.",
            "itemtype": "property",
            "name": "properties",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 143,
            "description": "Title of variant.",
            "itemtype": "property",
            "name": "variant_title",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 153,
            "description": "Price of the variant. For example: `\"5.00\"`.",
            "itemtype": "property",
            "name": "price",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 163,
            "description": "Compare at price for variant. The `compareAtPrice` would be\nthe price of the product previously before the product went on sale. For more info\ngo <a href=\"https://docs.shopify.com/manual/products/promoting-marketing/sales\" target=\"_blank\">here</a>.\n\nIf no `compareAtPrice` is set then this value will be `null`. An example value: `\"5.00\"`.",
            "itemtype": "property",
            "name": "compareAtPrice",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 177,
            "description": "The total price for this line item. For instance if the variant costs `1.50` and you have a quantity\nof 2 then `line_price` will be `3.00`.",
            "itemtype": "property",
            "name": "line_price",
            "readonly": "",
            "type": "{String}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-line-item-model.js",
            "line": 188,
            "description": "Variant's weight in grams. If no weight is set then `0` is returned.",
            "itemtype": "property",
            "name": "grams",
            "readonly": "",
            "type": "{Number}",
            "class": "CartLineItemModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 34,
            "description": "get ID for current cart",
            "itemtype": "property",
            "name": "id",
            "readonly": "",
            "type": "{String}",
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 44,
            "description": "Get an `Array` of {{#crossLink \"CartLineItemModel\"}}CartLineItemModel's{{/crossLink}}",
            "itemtype": "property",
            "name": "lineItems",
            "readonly": "",
            "type": "{Array}",
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 56,
            "description": "Gets the total quantity of all line items. Example: you've added two variants with quantities 3 and 2. `lineItemCount` will be 5.",
            "itemtype": "property",
            "name": "lineItemCount",
            "readonly": "",
            "type": "{Number}",
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 68,
            "description": "Get current subtotal price for all line items. Example: two items have been added to the cart that cost $1.25\nthen the subtotal will be `2.50`",
            "itemtype": "property",
            "name": "subtotal",
            "readonly": "",
            "type": "{String}",
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 84,
            "description": "Get checkout URL for current cart",
            "itemtype": "property",
            "name": "checkoutUrl",
            "readonly": "",
            "type": "{String}",
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 116,
            "description": "Add items to the cart. Updates cart's `lineItems` based on variants passed in.\n```javascript\ncart.addVariants({variant: variantObject, quantity: 1}).then(cart => {\n  // the cart has created line items\n});\n```",
            "deprecated": true,
            "deprecationMessage": "`createLineItemsFromVariants` will be used in the future as it's more descriptive",
            "itemtype": "method",
            "name": "addVariants",
            "params": [
                {
                    "name": "item",
                    "description": "- One or more variants",
                    "type": "Object",
                    "props": [
                        {
                            "name": "variant",
                            "description": "- variant object",
                            "type": "ProductVariantModel"
                        },
                        {
                            "name": "quantity",
                            "description": "- quantity",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "moreItems...",
                    "description": "- further objects defining `variant` and `quantity` maybe passed in",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "- the cart instance.",
                "type": "Promise|CartModel"
            },
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 138,
            "description": "Add items to the cart. Updates cart's `lineItems` based on variants passed in.\n```javascript\ncart.createLineItemsFromVariants({variant: variantObject, quantity: 1}).then(cart => {\n  // the cart has created line items\n});\n```",
            "itemtype": "method",
            "name": "createLineItemsFromVariants",
            "params": [
                {
                    "name": "item",
                    "description": "- One or more variants",
                    "type": "Object",
                    "props": [
                        {
                            "name": "variant",
                            "description": "- variant object",
                            "type": "ProductVariantModel"
                        },
                        {
                            "name": "quantity",
                            "description": "- quantity",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "moreItems...",
                    "description": "- further objects defining `variant` and `quantity` maybe passed in",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "public",
            "tagname": "",
            "return": {
                "description": "- the cart instance.",
                "type": "Promise|CartModel"
            },
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 205,
            "description": "Update a line item quantity based on line item id\n```javascript\n// This example changes the quantity for the first line item to 2\nconst firstLineItemId = cart.lineItems[0].id;\n\ncart.updateLineItem(firstLineItemId, 2).then(cart => {\n  // the cart has updated the line item\n});\n```",
            "itemtype": "method",
            "name": "updateLineItem",
            "params": [
                {
                    "name": "id",
                    "description": "- line item ID",
                    "type": "String"
                },
                {
                    "name": "quantity",
                    "description": "- new quantity for line item",
                    "type": "Number"
                }
            ],
            "throws": {
                "description": "if line item with ID is not in cart.",
                "type": "Error"
            },
            "access": "public",
            "tagname": "",
            "return": {
                "description": "- the cart instance",
                "type": "Promise|CartModel"
            },
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 242,
            "description": "Remove a line item from cart based on line item id\n```javascript\n// This example removes the first line item\nconst firstLineItemId = cart.lineItems[0].id;\n\ncart.removeLineItem(firstLineItemId).then(cart => {\n  // the cart has removed the line item\n});\n```",
            "itemtype": "method",
            "name": "removeLineItem",
            "params": [
                {
                    "name": "id",
                    "description": "- line item ID",
                    "type": "String"
                }
            ],
            "throws": {
                "description": "if line item with ID is not in cart.",
                "type": "Error"
            },
            "access": "public",
            "tagname": "",
            "return": {
                "description": "- the cart instance",
                "type": "Promise|CartModel"
            },
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 279,
            "description": "Remove all line items from cart\n```javascript\n// This example removes all line items from the cart\ncart.clearLineItems().then(cart => {\n  // the cart has removed all line items\n});",
            "itemtype": "method",
            "name": "clearLineItems",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "- the cart instance",
                "type": "Promise|CartModel"
            },
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/cart-model.js",
            "line": 296,
            "description": "Force update of cart model on server. This function will only be used in advanced situations and does not need to be called\nexplicitly to update line items. It is automatically called after\n{{#crossLink \"CartModel/createLineItemsFromVariants\"}}{{/crossLink}},\n{{#crossLink \"CartModel/updateLineItem\"}}{{/crossLink}},\n{{#crossLink \"CartModel/removeLineItem\"}}{{/crossLink}},\nand {{#crossLink \"CartModel/removeLineItem\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "updateModel",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "- the cart instance",
                "type": "Promise|CartModel"
            },
            "class": "CartModel"
        },
        {
            "file": "docs/src/src/models/image-model.js",
            "line": 23,
            "description": "Image variants available for an image. An example value of `imageVariant`:\n```\n[\n  {\n    \"name\": \"pico\",\n    \"dimensions\": \"16x16\",\n    \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/alien_146ef7c1-26e9-4e96-96e6-9d37128d0005_pico.jpg?v=1469046423\"\n  },\n  {\n    \"name\": \"compact\",\n    \"dimensions\": \"160x160\",\n    \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/alien_146ef7c1-26e9-4e96-96e6-9d37128d0005_compact.jpg?v=1469046423\"\n  }\n]\n```",
            "itemtype": "attribute",
            "name": "variants",
            "type": "{Array}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 19,
            "description": "Product unique ID",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 29,
            "description": "The product title",
            "itemtype": "property",
            "name": "title",
            "type": "{String}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 38,
            "description": "A product description.",
            "itemtype": "property",
            "name": "description",
            "type": "{String}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 47,
            "description": "An `Array` of `Objects` that contain meta data about an image including `src` of the images.\n\nAn example image `Object`:\n```\n{\n  created_at: \"2016-08-29T12:35:09-04:00\",\n  id: 17690553350,\n  position: 1,\n  product_id: 8291029446,\n  src: \"https://cdn.shopify.com/s/files/1/1019/0495/products/i11_c3334325-2d67-4623-8cd4-0a6b08aa1b83.jpg?v=1472488509\",\n  updated_at: \"2016-08-29T12:35:09-04:00\",\n  variant_ids: [ 27690103238 ]\n}\n```",
            "itemtype": "property",
            "name": "images",
            "type": "{Array} array of image objects.",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 77,
            "description": "Get an array of {{#crossLink \"ProductOptionModel\"}}ProductOptionModels{{/crossLink}}.\n{{#crossLink \"ProductOptionModel\"}}ProductOptionModels{{/crossLink}} can be used to\ndefine the currently `selectedVariant` from which you can get a checkout url\n({{#crossLink \"ProductVariantModel/checkoutUrl\"}}ProductVariantModel.checkoutUrl{{/crossLink}}) or can\nbe added to a cart ({{#crossLink \"CartModel/createLineItemsFromVariants\"}}CartModel.createLineItemsFromVariants{{/crossLink}}).\n\nBelow is an example on how to create html for option selections:\n ```javascript\n// the following will create an Array of HTML to create multiple select inputs\n// global callbacks are also created which will set the option as selected\nvar elements = product.options.map(function(option) {\n  // we'll create a callback in global scope\n  // which will be called when the select's value changes\n  var callBackName = option.name + 'onChange';\n  window[ callBackName ] = function(select) {\n    // set the products option to be selected\n    option.selected = select.value;\n  };\n\n  // return a string which will be HTML for the select\n  return '<select name=\"' + option.name + '\" onchange=\"'callBackName'(this)\">' + option.values.map(function(value) {\n    return '<option value=\"' + value + '\">' + value + '</option>';\n  }) + '</select>';\n});\n ```",
            "itemtype": "property",
            "name": "options",
            "type": "{Array|ProductOptionModel}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 136,
            "description": "An `Array` of {{#crossLink \"ProductVariantModel\"}}ProductVariantModel's{{/crossLink}}",
            "itemtype": "property",
            "name": "variants",
            "type": "{Array|ProductVariantModel} array of ProductVariantModel instances.",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 147,
            "description": "A read only `Array` of Strings represented currently selected option values. eg. `[\"Large\", \"Red\"]`",
            "itemtype": "property",
            "name": "selections",
            "type": "{Array | String}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 158,
            "description": "Retrieve variant for currently selected options. By default the first value in each\noption is selected which means `selectedVariant` will never be `null`.\n\nWith a `selectedVariant` you can create checkout url\n({{#crossLink \"ProductVariantModel/checkoutUrl\"}}ProductVariantModel.checkoutUrl{{/crossLink}}) or it can\nbe added to a cart ({{#crossLink \"CartModel/createLineItemsFromVariants\"}}CartModel.createLineItemsFromVariants{{/crossLink}}).",
            "itemtype": "property",
            "name": "selectedVariant",
            "type": "{ProductVariantModel}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-model.js",
            "line": 177,
            "description": "Retrieve image for currently selected variantImage. An example image Object would look like this:\n```\n{\n  created_at: \"2016-08-29T12:35:09-04:00\",\n  id: 17690553350,\n  position: 1,\n  product_id: 8291029446,\n  src: \"https://cdn.shopify.com/s/files/1/1019/0495/products/i11_c3334325-2d67-4623-8cd4-0a6b08aa1b83.jpg?v=1472488509\",\n  updated_at: \"2016-08-29T12:35:09-04:00\",\n  variant_ids: [ 27690103238 ]\n}\n```",
            "itemtype": "property",
            "name": "selectedVariantImage",
            "type": "{Object}",
            "class": "ProductModel"
        },
        {
            "file": "docs/src/src/models/product-option-model.js",
            "line": 17,
            "description": "name of option. Example values: `\"Size\"`, `\"Color\"`, etc.",
            "itemtype": "property",
            "name": "name",
            "readonly": "",
            "type": "String",
            "class": "ProductOptionModel"
        },
        {
            "file": "docs/src/src/models/product-option-model.js",
            "line": 27,
            "description": "an Array possible values for option. For instance if this option is a \"Size\" option an example value\nfor values could be: `[\"Large\", \"Medium\", \"Small\"]`",
            "itemtype": "property",
            "name": "values",
            "readonly": "",
            "type": "Array",
            "class": "ProductOptionModel"
        },
        {
            "file": "docs/src/src/models/product-option-model.js",
            "line": 39,
            "description": "get/set the currently selected option value with one of the values from the\n{{#crossLink \"ProductOptionModel/values\"}}ProductOptionModel.values{{/crossLink}} array. For\ninstance if the option values array had the following `[\"Large\", \"Medium\", \"Small\"]` setting `selected` to be\n`\"Large\"`, `\"Medium\"`, or `\"Small\"` would be valid any other value would throw an `Error`.",
            "itemtype": "property",
            "name": "selected",
            "type": "String",
            "class": "ProductOptionModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 14,
            "description": "Variant unique ID",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 23,
            "description": "ID of product variant belongs to",
            "itemtype": "property",
            "name": "productId",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 32,
            "description": "Title of variant",
            "itemtype": "property",
            "name": "title",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 41,
            "description": "Title of product variant belongs to",
            "itemtype": "property",
            "name": "productTitle",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 50,
            "description": "Compare at price for variant. The `compareAtPrice` would be\nthe price of the product previously before the product went on sale. For more info\ngo <a href=\"https://docs.shopify.com/manual/products/promoting-marketing/sales\" target=\"_blank\">here</a>.\n\nIf no `compareAtPrice` is set then this value will be `null`. An example value: `\"5.00\"`",
            "itemtype": "property",
            "name": "compareAtPrice",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 64,
            "description": "Price of the variant. The price will be in the following form: `\"10.00\"`",
            "itemtype": "property",
            "name": "price",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 74,
            "description": "Price of variant, formatted according to shop currency format string.\nFor instance `\"$10.00\"`",
            "itemtype": "property",
            "name": "formattedPrice",
            "type": "{String}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 85,
            "description": "Variant weight in grams. If no weight is defined grams will be `0`.",
            "itemtype": "property",
            "name": "grams",
            "type": "{Number}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 94,
            "description": "Option values associated with this variant. Example `optionValues`:\n```\n[\n  {\n    \"name\": \"Size\",\n    \"option_id\": 9165336518,\n    \"value\": \"small\"\n  },\n  {\n    \"name\": \"Color\",\n    \"option_id\": 9640532358,\n    \"value\": \"blue\"\n  }\n]\n````",
            "itemtype": "property",
            "name": "optionValues",
            "type": "{Array|Object}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 118,
            "description": "Variant in stock. Always `true` if inventory tracking is disabled.",
            "itemtype": "property",
            "name": "available",
            "type": "{Boolean}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 127,
            "description": "Image for variant. An example image `Object`:\n```\n{\n  created_at: \"2016-08-29T12:35:09-04:00\",\n  id: 17690553350,\n  position: 1,\n  product_id: 8291029446,\n  src: \"https://cdn.shopify.com/s/files/1/1019/0495/products/i11_c3334325-2d67-4623-8cd4-0a6b08aa1b83.jpg?v=1472488509\",\n  updated_at: \"2016-08-29T12:35:09-04:00\",\n  variant_ids: [ 27690103238 ]\n}\n```",
            "itemtype": "property",
            "name": "image",
            "type": "{Object}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 162,
            "description": "Image variants available for a variant. An example value of `imageVariant`:\n```\n[\n  {\n    \"name\": \"pico\",\n    \"dimensions\": \"16x16\",\n    \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/alien_146ef7c1-26e9-4e96-96e6-9d37128d0005_pico.jpg?v=1469046423\"\n  },\n  {\n    \"name\": \"compact\",\n    \"dimensions\": \"160x160\",\n    \"src\": \"https://cdn.shopify.com/s/files/1/1019/0495/products/alien_146ef7c1-26e9-4e96-96e6-9d37128d0005_compact.jpg?v=1469046423\"\n  }\n]\n```",
            "itemtype": "property",
            "name": "imageVariant",
            "type": "{Array}",
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/product-variant-model.js",
            "line": 190,
            "description": "Get a checkout url for a specific product variant. You can\noptionally pass a quantity. If no quantity is passed then quantity\nwill default to 1. The example below will grab a checkout url for\n3 copies of the first variant:\n```\nconst checkoutURL = product.variants[ 0 ].checkoutUrl(3);\n```",
            "itemtype": "method",
            "name": "checkoutUrl",
            "params": [
                {
                    "name": "quantity ",
                    "description": "quantity of variants",
                    "type": "Number",
                    "optional": true,
                    "optdefault": " 1"
                }
            ],
            "access": "public",
            "tagname": "",
            "return": {
                "description": "Checkout URL",
                "type": "String"
            },
            "class": "ProductVariantModel"
        },
        {
            "file": "docs/src/src/models/reference-model.js",
            "line": 20,
            "description": "get the ID for current reference (not what it refers to, but its own unique identifier)",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "class": "ReferenceModel"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 28,
            "description": "An object with keys for deprecated properties and values as functions that\nwill transform the value into a usable value. A depracation transform should\nhave the value signature function(deprecated_value, config_to_be_transformed)",
            "itemtype": "attribute",
            "name": "deprecatedProperties",
            "default": "{ myShopifyDomain: this.transformMyShopifyDomain }",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 42,
            "description": "Transform the myShopifyDomain config to a domain config.",
            "itemtype": "method",
            "name": "transformMyShopifyDomain",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "subdomain",
                    "description": "The original subdomain on myshopify.com",
                    "type": "String"
                },
                {
                    "name": "attrs.",
                    "description": "The config attributes to be transformed to a\nnon-deprecated state.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the transformed config attributes.",
                "type": "Object"
            },
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 58,
            "description": "Transform the apiKey config to an accessToken config.",
            "itemtype": "method",
            "name": "transformApiKey",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "apiKey",
                    "description": "The original api key",
                    "type": "String"
                },
                {
                    "name": "attrs.",
                    "description": "The config attributes to be transformed to a\nnon-deprecated state.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the transformed config attributes.",
                "type": "Object"
            },
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 74,
            "description": "Properties that must be set on initializations",
            "itemtype": "attribute",
            "name": "requiredProperties",
            "default": "['accessToken', 'appId', 'myShopifyDomain']",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 87,
            "description": "Properties that may be set on initializations",
            "itemtype": "attribute",
            "name": "requiredProperties",
            "default": "['ajaxHeaders']",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 98,
            "description": "The accessToken for authenticating against shopify. This is your api client's\nstorefront access token. Not the shared secret. Set during initialization.",
            "itemtype": "attribute",
            "name": "accessToken",
            "default": "''",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 108,
            "description": "The apiKey for authenticating against shopify. This is your api client's\npublic api token. Not the shared secret. Set during initialization.",
            "itemtype": "attribute",
            "name": "apiKey",
            "default": "''",
            "type": "String",
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "Use `config.accessToken` instead.",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 119,
            "itemtype": "attribute",
            "name": "appId",
            "default": "''",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 127,
            "description": "The domain that all the api requests will go to",
            "itemtype": "attribute",
            "name": "domain",
            "default": "''",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 136,
            "description": "The subdomain of myshopify.io that all the api requests will go to",
            "itemtype": "attribute",
            "name": "myShopifyDomain",
            "default": "''",
            "type": "String",
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "deprecationMessage": "Use `config.domain` instead.",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/config.js",
            "line": 146,
            "itemtype": "attribute",
            "name": "ajaxHeaders",
            "default": "{}",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Logger"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 64,
            "itemtype": "attribute",
            "name": "",
            "default": "{\n products: ListingsAdapter,\n collections: ListingsAdapter,\n carts: CartAdapter\n}",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 91,
            "description": "Fetch all of a `type`, returning a promise.\n\n```javascript\nclient.fetchAll('products').then(products => {\n  // do things with products\n});\n```",
            "itemtype": "method",
            "name": "fetchAll",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "The pluralized name of the type, in lower case.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a promise resolving with an array of `type`",
                "type": "Promise|Array"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 113,
            "description": "Fetch one of a `type`, returning a promise.\n\n```javascript\nclient.fetch('products', 123).then(product => {\n  // do things with the product\n});\n```",
            "itemtype": "method",
            "name": "fetch",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "The pluralized name of the type, in lower case.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "a unique identifier",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "a promise resolving with a single instance of\n`type` expressed as a `BaseModel`.",
                "type": "Promise|BaseModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 137,
            "description": "Fetch many of a `type`, that match `query`\n\n```javascript\nclient.fetchQuery('products', { collection_id: 456 }).then(products => {\n  // do things with the products\n});\n```",
            "itemtype": "method",
            "name": "fetchQuery",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "The pluralized name of the type, in lower case.",
                    "type": "String"
                },
                {
                    "name": "query",
                    "description": "a query sent to the api server.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a promise resolving with an array of `type`.",
                "type": "Promise|Array"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 160,
            "description": "Create an instance of `type`, optionally including `modelAttrs`.\n\n```javascript\nclient.create('carts', { line_items: [ ... ] }).then(cart => {\n  // do things with the cart.\n});\n```",
            "itemtype": "method",
            "name": "create",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "The pluralized name of the type, in lower case.",
                    "type": "String"
                },
                {
                    "name": "modelAttrs",
                    "description": "attributes representing the internal state\nof the model to be persisted.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "a promise resolving with a single instance of\n`type`",
                "type": "Promise|CartModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 189,
            "description": "Create an instance of `type`, optionally including `attrs`.\n\n```javascript\nclient.create('carts', { line_items: [ ... ] }).then(cart => {\n  // do things with the cart.\n});\n```",
            "itemtype": "method",
            "name": "update",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "The pluralized name of the type, in lower case.",
                    "type": "String"
                },
                {
                    "name": "updatedModel",
                    "description": "The model that represents new state to\nto persist.",
                    "type": "BaseModel"
                }
            ],
            "return": {
                "description": "a promise resolving with a single instance of\n`type`",
                "type": "Promise|CartModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 217,
            "description": "Proxy to serializer's deserialize.",
            "itemtype": "method",
            "name": "deserialize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "The pluralized name of the type, in lower case.",
                    "type": "String"
                },
                {
                    "name": "payload",
                    "description": "The raw payload returned by the adapter.",
                    "type": "Object"
                },
                {
                    "name": "adapter",
                    "description": "The adapter that yielded the payload.",
                    "type": "BaseAdapter"
                },
                {
                    "name": "existingSerializer",
                    "description": "The serializer to attach. If\nnone is passed, then `this.deserialize` will create one for the type.",
                    "type": "BaseSerializer"
                },
                {
                    "name": "opts",
                    "description": "Options that determine which deserialization method to\nuse.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "multiple",
                            "description": "true when the payload represents multiple\nmodels",
                            "type": "Boolean"
                        },
                        {
                            "name": "single",
                            "description": "true when the payload represents one model.",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "return": {
                "description": "an instance of `type` reified into a model.",
                "type": "BaseModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 248,
            "description": "Creates a {{#crossLink \"CartModel\"}}CartModel{{/crossLink}} instance.\n\n```javascript\nclient.createCart().then(cart => {\n  // do something with cart\n});\n```",
            "itemtype": "method",
            "name": "createCart",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "- new cart instance.",
                "type": "Promise|CartModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 273,
            "description": "Updates an existing {{#crossLink \"CartModel\"}}CartModel{{/crossLink}} instance and persists it to localStorage.\n\n```javascript\nclient.createCart().then(cart => {\n  cart.lineItems = [\n    // ...\n  ];\n  client.updateCart(cart);\n});\n```",
            "params": [
                {
                    "name": "updatedCart",
                    "description": "an updated CartModel",
                    "type": "CartModel"
                }
            ],
            "itemtype": "method",
            "name": "updateCart",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "- updated cart instance.",
                "type": "Promise|CartModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 294,
            "description": "Retrieve a previously created cart by its key.\n\n```javascript\nclient.fetchCart('shopify-buy.1459804699118.2').then(cart => {\n  console.log(cart); // The retrieved cart\n});",
            "itemtype": "method",
            "name": "fetchCart",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "The cart's unique identifier",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The cart model.",
                "type": "Promise|CartModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 310,
            "description": "This function will return an `Array` of products from your store\n```\nclient.fetchAllProducts()\n.then(function(products) {\n  // all products in store\n});\n```",
            "itemtype": "method",
            "name": "fetchAllProducts",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "The product models.",
                "type": "Promise|Array"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 325,
            "description": "This function will return an `Array` of collections from your store\n```\nclient.fetchAllCollections()\n.then(function(collections) {\n\n});\n```",
            "itemtype": "method",
            "name": "fetchAllCollections",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "The collection models.",
                "type": "Promise|Array"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 340,
            "description": "Fetch one product by its ID.\n\n```javascript\nclient.fetchProduct('8569911558').then(product => {\n  console.log(product); // The product with an ID of '8569911558'\n});\n```",
            "itemtype": "method",
            "name": "fetchProduct",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "a unique identifier",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "The product model with the specified ID.",
                "type": "Promise|BaseModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 356,
            "description": "Fetch one collection by its ID.\n\n```javascript\nclient.fetchCollection('336903494').then(collection => {\n  console.log(collection); // The collection with an ID of '336903494'\n});\n```",
            "itemtype": "method",
            "name": "fetchCollection",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "a unique identifier",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "The collection model with the specified ID.",
                "type": "Promise|BaseModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 372,
            "description": "Fetches a list of products matching a specified query.\n\n```javascript\nclient.fetchQueryProducts({ collection_id: '336903494', tag: ['hats'] }).then(products => {\n  console.log(products); // An array of products in collection '336903494' having the tag 'hats'\n});\n```",
            "itemtype": "method",
            "name": "fetchQueryProducts",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "query",
                    "description": "A query sent to the api server containing one or more of:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "collection_id",
                            "description": "The ID of a collection to retrieve products from",
                            "type": "String|Number",
                            "optional": true
                        },
                        {
                            "name": "tag",
                            "description": "A list of tags to filter the products by. Accepts up to 10 tags.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "product_ids",
                            "description": "A list of product IDs to retrieve",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "page",
                            "description": "The page offset number of the current lookup (based on the `limit`)",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "limit",
                            "description": "The number of products to retrieve per page",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "50"
                        },
                        {
                            "name": "handle",
                            "description": "The handle of the product to look up",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "updated_at_min",
                            "description": "Products updated since the supplied timestamp (format: 2008-12-31 03:00)",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "sort_by",
                            "description": "Will modify how products are ordered. Possible values are:\n                                  `\"updated_at\"`, `\"best-selling\"`, `\"title-ascending\"`, `\"title-descending\"`,\n                                  `\"price-descending\"`, `\"price-ascending\"`, `\"created-descending\"`, `\"created-ascending\"`,\n                                  or `\"collection-default\"`. Using `\"collection-default\"` means that products will be ordered\n                                  the using the custom ordering defined in your Shopify Admin. Default value `\"collection-default\"`.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The product models.",
                "type": "Promise|Array"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 399,
            "description": "Fetches a list of collections matching a specified query.\n\n```javascript\nclient.fetchQueryCollections({page: 2, limit: 20}).then(collections => {\n  console.log(collections); // An array of collection resources\n});\n```",
            "itemtype": "method",
            "name": "fetchQueryCollections",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "query",
                    "description": "a query sent to the api server.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "page",
                            "description": "the page offset number of the current lookup (based on the `limit`)",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "limit",
                            "description": "the number of collections to retrieve per page",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "50"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The collection models.",
                "type": "Promise|Array"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shop-client.js",
            "line": 418,
            "description": "This method looks up a reference in localStorage to the most recent cart.\nIf one is not found, creates one. If the cart the reference points to\ndoesn't exist, create one and store the new reference.\n\n```javascript\nclient.fetchRecentCart().then(cart => {\n // do stuff with the cart\n});\n```",
            "itemtype": "method",
            "name": "fetchRecentCart",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "The cart.",
                "type": "Promise|CartModel"
            },
            "class": "ShopClient",
            "module": "shopify-buy",
            "submodule": "shop-client"
        },
        {
            "file": "docs/src/src/shopify.js",
            "line": 29,
            "description": "Create a ShopClient. This is the main entry point to the SDK.\n\n```javascript\nconst client = ShopifyBuy.buildClient({\n  accessToken: 'bf081e860bc9dc1ce0654fdfbc20892d',\n  appId: 6,\n  myShopifyDomain: 'your-shop-subdomain.myshopify.com', //Deprecated. Use `domain` instead\n  domain: 'embeds.myshopify.com'\n});\n```",
            "itemtype": "method",
            "name": "buildClient",
            "static": 1,
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "configAttrs",
                    "description": "An object of required config data such as: `accessToken`, `appId`, `domain`",
                    "type": "Object",
                    "props": [
                        {
                            "name": "accessToken",
                            "description": "An access token for your store. Documentation how to get a token:\n                                   https://help.shopify.com/api/sdks/js-buy-sdk/getting-started#api-key",
                            "type": "String"
                        },
                        {
                            "name": "appId",
                            "description": "Typically will be 6 which is the Buy Button App Id. For more info on App Id see:\n                                  https://help.shopify.com/api/sdks/js-buy-sdk/getting-started#app-id",
                            "type": "String"
                        },
                        {
                            "name": "domain",
                            "description": "Your shop's full `myshopify.com` domain. For example: `embeds.myshopify.com`",
                            "type": "String"
                        },
                        {
                            "name": "myShopifyDomain",
                            "description": "You shop's `myshopify.com` domain. [deprecated Use configAttrs.domain]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "a client for the shop using your api credentials which you can use to query your store.",
                "type": "ShopClient"
            },
            "class": "ShopifyBuy",
            "module": "shopify-buy",
            "submodule": "shopify"
        }
    ],
    "warnings": []
}